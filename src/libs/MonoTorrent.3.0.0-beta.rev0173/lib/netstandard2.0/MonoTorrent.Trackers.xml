<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MonoTorrent.Trackers</name>
    </assembly>
    <members>
        <member name="M:MonoTorrent.Connections.TrackerServer.HttpTrackerListener.Start">
            <summary>
            Starts listening for incoming connections
            </summary>
        </member>
        <member name="M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Int32)">
            <summary>
            Creates a listener to receive incoming HTTP requests on IPAddress.Any and the given port.
            The resulting HTTP prefix will be similar to http://{address}:{port}/announce/ and will support Scrape requests.
            </summary>
            <param name="port">The local port to bind to.</param>
            <returns></returns>
        </member>
        <member name="M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Net.IPAddress,System.Int32)">
            <summary>
            Creates a listener to receive incoming HTTP requests on the given local IP address and port.
            The resulting HTTP prefix will be similar to http://{address}:{port}/announce/ and will support Scrape requests.
            </summary>
            <param name="address">The local IP address to bind to.</param>
            <param name="port">The local port to bind to.</param>
            <returns></returns>
        </member>
        <member name="M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.Net.IPEndPoint)">
            <summary>
            Creates a listener to receive incoming HTTP requests on the given local endpoint.
            The resulting HTTP prefix will be similar to http://{address}:{port}/announce/ and will support Scrape requests.
            </summary>
            <param name="endpoint">The local endpoint to bind to.</param>
            <returns></returns>
        </member>
        <member name="M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateHttp(System.String)">
            <summary>
            Creates a listener to receive incoming HTTP requests on the given HTTP prefix. If
            the prefix ends in '/announce/' it will support Scrape requests, otherwise scraping will be disabled.
            The prefix should be in the form http://{address}:{port}/test/query/announce/
            </summary>
            <param name="httpPrefix">The HTTP prefix to bind to.</param>
            <returns></returns>
        </member>
        <member name="M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Int32)">
            <summary>
            Creates a listener which binds to IPAddress.Any and listens for incoming UDP requests on the given local port.
            </summary>
            <param name="port">The local port to bind to.</param>
            <returns></returns>
        </member>
        <member name="M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Net.IPAddress,System.Int32)">
            <summary>
            Creates a listener which listens for incoming UDP requests on the given local IP address and port.
            </summary>
            <param name="address">The local IP address to bind to.</param>
            <param name="port">The local port to bind to.</param>
            <returns></returns>
        </member>
        <member name="M:MonoTorrent.Connections.TrackerServer.TrackerListenerFactory.CreateUdp(System.Net.IPEndPoint)">
            <summary>
            Creates a listener which listens for incoming UDP requests on the given local IP address and port.
            </summary>
            <param name="endpoint">The local endpoint to bind to.</param>
            <returns></returns>
        </member>
        <member name="M:MonoTorrent.Connections.TrackerServer.UdpTrackerListener.Start">
            <summary>
            Starts listening for incoming connections
            </summary>
        </member>
        <member name="P:MonoTorrent.GitInfoHelper.ClientVersion">
            <summary>
            The current version of the client in the form "MO1234", which represents a version triplet of '1.2.34'.
            </summary>
        </member>
        <member name="F:MonoTorrent.GitInfoHelper.Version">
            <summary>
            The full version of this library in the form 'A.B.C'.
            'A' and 'B' are guaranteed to be 1 digit each. 'C' can be one or two digits.
            </summary>
        </member>
        <member name="M:MonoTorrent.Client.MainLoop.SwitchToThreadpool">
            <summary>
            When <see cref="T:MonoTorrent.ThreadSwitcher"/> is awaited the continuation will be executed
            on the threadpool. If you are already on a threadpool thread the continuation
            will execute synchronously.
            </summary>
            <returns></returns>
        </member>
        <member name="M:MonoTorrent.Client.MainLoop.SwitchThread">
            <summary>
            When <see cref="T:MonoTorrent.ThreadSwitcher"/> is awaited the continuation will always be queued on
            the ThreadPool for execution. It will never execute synchronously.
            </summary>
            <returns></returns>
        </member>
        <member name="T:System.Runtime.CompilerServices.AsyncVoidMethodBuilder">
            <summary>
            A reimplementation of the built-in AsyncVoidMethodBuilder which is backed by
            <see cref="T:ReusableTasks.ReusableTask"/> instead of <see cref="T:System.Threading.Tasks.Task"/>.
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Create">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetException(System.Exception)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetResult">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine)">
            <summary>
            
            </summary>
            <param name="stateMachine"></param>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.Start``1(``0@)">
            <summary>
            
            </summary>
            <typeparam name="TStateMachine"></typeparam>
            <param name="stateMachine"></param>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitOnCompleted``2(``0@,``1@)">
            <summary>
            
            </summary>
            <typeparam name="TAwaiter"></typeparam>
            <typeparam name="TStateMachine"></typeparam>
            <param name="awaiter"></param>
            <param name="stateMachine"></param>
        </member>
        <member name="M:System.Runtime.CompilerServices.AsyncVoidMethodBuilder.AwaitUnsafeOnCompleted``2(``0@,``1@)">
            <summary>
            
            </summary>
            <typeparam name="TAwaiter"></typeparam>
            <typeparam name="TStateMachine"></typeparam>
            <param name="awaiter"></param>
            <param name="stateMachine"></param>
        </member>
        <member name="T:ThisAssembly">
            <summary>Provides access to the current assembly information.</summary>
        </member>
        <member name="T:ThisAssembly.Git">
            <summary>Provides access to the git information for the current assembly.</summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirty">
            <summary>IsDirty: true</summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirtyString">
            <summary>IsDirtyString: true</summary>
        </member>
        <member name="F:ThisAssembly.Git.RepositoryUrl">
            <summary>Repository URL: https://github.com/alanmcgovern/monotorrent</summary>
        </member>
        <member name="F:ThisAssembly.Git.Branch">
            <summary>Branch: master</summary>
        </member>
        <member name="F:ThisAssembly.Git.Commit">
            <summary>Commit: 18fa8189</summary>
        </member>
        <member name="F:ThisAssembly.Git.Sha">
            <summary>Sha: 18fa8189430e44b101148b0a3c64caaacab5929c</summary>
        </member>
        <member name="F:ThisAssembly.Git.CommitDate">
            <summary>Commit date: 2023-03-01T00:02:49+00:00</summary>
        </member>
        <member name="F:ThisAssembly.Git.Commits">
            <summary>Commits on top of base version: 173</summary>
        </member>
        <member name="F:ThisAssembly.Git.Tag">
            <summary>Tag: </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseTag">
            <summary>Base tag: </summary>
        </member>
        <member name="T:ThisAssembly.Git.BaseVersion">
            <summary>Provides access to the base version information used to determine the <see cref="T:ThisAssembly.Git.SemVer" />.</summary>      
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Major">
            <summary>Major: 3</summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Minor">
            <summary>Minor: 0</summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Patch">
            <summary>Patch: 0</summary>
        </member>
        <member name="T:ThisAssembly.Git.SemVer">
            <summary>Provides access to SemVer information for the current assembly.</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Major">
            <summary>Major: 3</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Minor">
            <summary>Minor: 0</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Patch">
            <summary>Patch: 173</summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Label">
            <summary>Label: </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.DashLabel">
            <summary>Label with dash prefix: </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Source">
            <summary>Source: File</summary>
        </member>
    </members>
</doc>
